From 96868ad7cee7195549e9e49782c52ec96d1a3b95 Mon Sep 17 00:00:00 2001
From: Jason Hung <jhung@globalscaletechnologies.com>
Date: Tue, 13 Aug 2024 16:28:41 +0800
Subject: [PATCH] sound: codec: mt6359: add external amp gpio

add external amp gpio for Headphone L/R Ext Spk Amp
---
 sound/soc/codecs/mt6359.c | 51 +++++++++++++++++++++++++++++++++++++--
 sound/soc/codecs/mt6359.h |  3 +++
 2 files changed, 52 insertions(+), 2 deletions(-)

diff --git a/sound/soc/codecs/mt6359.c b/sound/soc/codecs/mt6359.c
index 0a87b6e1a727..bcbdc79ff71a 100644
--- a/sound/soc/codecs/mt6359.c
+++ b/sound/soc/codecs/mt6359.c
@@ -12,6 +12,7 @@
 #include <linux/of_device.h>
 #include <linux/platform_device.h>
 #include <linux/regulator/consumer.h>
+#include <linux/gpio/consumer.h>
 #include <linux/sched.h>
 #include <sound/soc.h>
 #include <sound/tlv.h>
@@ -1855,6 +1856,26 @@ static int mt_hp_damp_event(struct snd_soc_dapm_widget *w,
 	return 0;
 }
 
+static int mt_ext_amp_power_event(struct snd_soc_dapm_widget *w,
+	struct snd_kcontrol *kcontrol, int event)
+{
+	struct snd_soc_component *cmpnt = snd_soc_dapm_to_component(w->dapm);
+	struct mt6359_priv *priv = snd_soc_component_get_drvdata(cmpnt);
+
+	switch (event) {
+	case SND_SOC_DAPM_POST_PMU:
+		gpiod_set_value_cansleep(priv->ext_amp_gpio, 1);
+		break;
+	case SND_SOC_DAPM_PRE_PMD:
+		gpiod_set_value_cansleep(priv->ext_amp_gpio, 0);
+		break;
+	default:
+		break;
+	}
+
+	return 0;
+}
+
 static int mt_esd_resist_event(struct snd_soc_dapm_widget *w,
 			       struct snd_kcontrol *kcontrol,
 			       int event)
@@ -2123,6 +2144,10 @@ static const struct snd_soc_dapm_widget mt6359_dapm_widgets[] = {
 			      mt_hp_damp_event,
 			      SND_SOC_DAPM_POST_PMD),
 
+	SND_SOC_DAPM_SUPPLY("Ext Amp Power", SND_SOC_NOPM, 0, 0,
+			      mt_ext_amp_power_event,
+			      SND_SOC_DAPM_PRE_PMD | SND_SOC_DAPM_POST_PMU),
+
 	/* Receiver */
 	SND_SOC_DAPM_MUX_E("RCV Mux", SND_SOC_NOPM, 0, 0,
 			   &rcv_in_mux_control,
@@ -2542,8 +2567,12 @@ static const struct snd_soc_dapm_route mt6359_dapm_routes[] = {
 
 	{"Headphone L", NULL, "HP Mux"},
 	{"Headphone R", NULL, "HP Mux"},
-	{"Headphone L Ext Spk Amp", NULL, "HP Mux"},
-	{"Headphone R Ext Spk Amp", NULL, "HP Mux"},
+//	{"Headphone L Ext Spk Amp", NULL, "HP Mux"},
+//	{"Headphone R Ext Spk Amp", NULL, "HP Mux"},
+
+	{"Ext Amp Power", NULL, "HP Mux"},
+	{"Headphone L Ext Spk Amp", NULL, "Ext Amp Power"},
+	{"Headphone R Ext Spk Amp", NULL, "Ext Amp Power"},
 
 	/* Receiver Path */
 	{"RCV Mux", "Voice Playback", "DACL"},
@@ -2815,6 +2844,24 @@ static int mt6359_parse_dt(struct mt6359_priv *priv)
 		priv->mux_select[MUX_MIC_TYPE_2] = MIC_TYPE_MUX_IDLE;
 	}
 
+	priv->ext_amp_gpio = devm_fwnode_gpiod_get(dev, of_fwnode_handle(np),
+						   "ext-amp-enable",
+						   GPIOD_OUT_LOW,
+						   "speaker-amp");
+	if (IS_ERR(priv->ext_amp_gpio)) {
+		ret = PTR_ERR(priv->ext_amp_gpio);
+		switch (ret) {
+		case -ENOENT:
+			priv->ext_amp_gpio = NULL;
+			break;
+		default:
+			dev_err(dev, "Failed to get ext-amp-enable GPIO: %d\n", ret);
+			fallthrough;
+		case -EPROBE_DEFER:
+			return ret;
+		}
+	}
+
 	return 0;
 }
 
diff --git a/sound/soc/codecs/mt6359.h b/sound/soc/codecs/mt6359.h
index 296ffa7f50b5..1ea9a26ab489 100644
--- a/sound/soc/codecs/mt6359.h
+++ b/sound/soc/codecs/mt6359.h
@@ -7,6 +7,8 @@
 #ifndef _MT6359_H_
 #define _MT6359_H_
 
+#include <linux/gpio/consumer.h>
+
 /*************Register Bit Define*************/
 #define MT6359_TOP0_ID                       0x0
 #define MT6359_SMT_CON1                      0x32
@@ -4272,6 +4274,7 @@ struct mt6359_priv {
 	int hp_gain_ctl;
 	int hp_hifi_mode;
 	int mtkaif_protocol;
+	struct gpio_desc *ext_amp_gpio;
 };
 
 #define CODEC_MT6359_NAME "mtk-codec-mt6359"
